
ByggernGR1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000a5e  00000af2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800122  00800122  00000b14  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000093b  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ef  00000000  00000000  000015c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000601  00000000  00000000  00001bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000244  00000000  00000000  000021b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000377  00000000  00000000  000023f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000496  00000000  00000000  0000276f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000128  00000000  00000000  00002c05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e5       	ldi	r30, 0x5E	; 94
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 32       	cpi	r26, 0x22	; 34
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e2       	ldi	r26, 0x22	; 34
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ae 32       	cpi	r26, 0x2E	; 46
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 87 00 	call	0x10e	; 0x10e <main>
  a6:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_1>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/delay.h>
INT0_vect(){
	//not in use
}
  ae:	08 95       	ret

000000b0 <adc_read>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	9a e1       	ldi	r25, 0x1A	; 26
  b2:	9a 95       	dec	r25
  b4:	f1 f7       	brne	.-4      	; 0xb2 <adc_read+0x2>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <adc_read+0x8>
	
	//Set start address for adc:
	volatile char *adcAddress = (char *) 0x1400;
	
	//If input is out of bounds, return 0:
	if(chn >4 || chn < 1) {
  b8:	9f ef       	ldi	r25, 0xFF	; 255
  ba:	98 0f       	add	r25, r24
  bc:	94 30       	cpi	r25, 0x04	; 4
  be:	50 f4       	brcc	.+20     	; 0xd4 <adc_read+0x24>
		return 0;
	}
	
	//Modify address to begin conversion:
	*adcAddress = 0x03 + chn ;
  c0:	8d 5f       	subi	r24, 0xFD	; 253
  c2:	80 93 00 14 	sts	0x1400, r24
  c6:	8a e1       	ldi	r24, 0x1A	; 26
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <adc_read+0x18>
  cc:	00 c0       	rjmp	.+0      	; 0xce <adc_read+0x1e>
	_delay_us(80);
	
	//Return result of conversion from memory:
	return *adcAddress;
  ce:	80 91 00 14 	lds	r24, 0x1400
  d2:	08 95       	ret
	//Set start address for adc:
	volatile char *adcAddress = (char *) 0x1400;
	
	//If input is out of bounds, return 0:
	if(chn >4 || chn < 1) {
		return 0;
  d4:	80 e0       	ldi	r24, 0x00	; 0
	*adcAddress = 0x03 + chn ;
	_delay_us(80);
	
	//Return result of conversion from memory:
	return *adcAddress;
  d6:	08 95       	ret

000000d8 <joy_cal>:
	
	
}

void joy_cal(){
	xInitPos = adc_read(1); //x-axis @ channel 1.
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	0e 94 58 00 	call	0xb0	; 0xb0 <adc_read>
  de:	80 93 22 01 	sts	0x0122, r24
	yInitPos = adc_read(2); //y-axis @ channel 2.
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 58 00 	call	0xb0	; 0xb0 <adc_read>
  e8:	80 93 23 01 	sts	0x0123, r24
  ec:	08 95       	ret

000000ee <joy_getButtonValue>:
		else{return DOWN;}
	}
}

uint8_t joy_getButtonValue(joy_buttons button) {
	if(button == LEFT_BUTTON) {
  ee:	81 11       	cpse	r24, r1
  f0:	03 c0       	rjmp	.+6      	; 0xf8 <joy_getButtonValue+0xa>
		return PINB & (1 << PINB2);
  f2:	86 b3       	in	r24, 0x16	; 22
  f4:	84 70       	andi	r24, 0x04	; 4
  f6:	08 95       	ret
	}
	if(button == RIGHT_BUTTON) {
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	19 f4       	brne	.+6      	; 0x102 <joy_getButtonValue+0x14>
		return PINB &(1 << PINB3);
  fc:	86 b3       	in	r24, 0x16	; 22
  fe:	88 70       	andi	r24, 0x08	; 8
 100:	08 95       	ret
	}
	if(button == JOYSTICK_BUTTON) {
 102:	82 30       	cpi	r24, 0x02	; 2
 104:	19 f4       	brne	.+6      	; 0x10c <joy_getButtonValue+0x1e>
		return PINB & (1 << PINB0);
 106:	86 b3       	in	r24, 0x16	; 22
 108:	81 70       	andi	r24, 0x01	; 1
 10a:	08 95       	ret
	}
}
 10c:	08 95       	ret

0000010e <main>:


int main(void)
{	
	//Initialization:
	UART_init(MYUBRR);
 10e:	8f e1       	ldi	r24, 0x1F	; 31
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 c6 00 	call	0x18c	; 0x18c <UART_init>
	UART_parsePrint();
 116:	0e 94 ce 00 	call	0x19c	; 0x19c <UART_parsePrint>
	mem_init();
 11a:	0e 94 b7 00 	call	0x16e	; 0x16e <mem_init>
	
	//Code:
	
	joy_cal();
 11e:	0e 94 6c 00 	call	0xd8	; 0xd8 <joy_cal>
	while(1){
		 
		 
		 
		//printf(" %d\n",joy_getDir());
		printf("Left: %d Right: %d Joy: %d\n",joy_getButtonValue(LEFT_BUTTON), joy_getButtonValue(RIGHT_BUTTON), joy_getButtonValue(JOYSTICK_BUTTON));
 122:	c6 e0       	ldi	r28, 0x06	; 6
 124:	d1 e0       	ldi	r29, 0x01	; 1
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	0e 94 77 00 	call	0xee	; 0xee <joy_getButtonValue>
 12c:	08 2f       	mov	r16, r24
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	0e 94 77 00 	call	0xee	; 0xee <joy_getButtonValue>
 134:	18 2f       	mov	r17, r24
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	0e 94 77 00 	call	0xee	; 0xee <joy_getButtonValue>
 13c:	1f 92       	push	r1
 13e:	0f 93       	push	r16
 140:	1f 92       	push	r1
 142:	1f 93       	push	r17
 144:	1f 92       	push	r1
 146:	8f 93       	push	r24
 148:	df 93       	push	r29
 14a:	cf 93       	push	r28
 14c:	0e 94 20 01 	call	0x240	; 0x240 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	87 ea       	ldi	r24, 0xA7	; 167
 152:	91 e6       	ldi	r25, 0x61	; 97
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x46>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x4c>
 15a:	00 00       	nop
 15c:	8d b7       	in	r24, 0x3d	; 61
 15e:	9e b7       	in	r25, 0x3e	; 62
 160:	08 96       	adiw	r24, 0x08	; 8
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	9e bf       	out	0x3e, r25	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	8d bf       	out	0x3d, r24	; 61
 16c:	dc cf       	rjmp	.-72     	; 0x126 <main+0x18>

0000016e <mem_init>:
 */ 
#include <avr/io.h>

void mem_init(){
	//Enable ext ram:
	MCUCR |= (1 << SRE);
 16e:	85 b7       	in	r24, 0x35	; 53
 170:	80 68       	ori	r24, 0x80	; 128
 172:	85 bf       	out	0x35, r24	; 53
	
	//Mask out pins PC7-PC4:
	SFIOR |= (1 << XMM2);
 174:	80 b7       	in	r24, 0x30	; 48
 176:	80 62       	ori	r24, 0x20	; 32
 178:	80 bf       	out	0x30, r24	; 48
 17a:	08 95       	ret

0000017c <UART_recieve>:
	UCSR0C &= !(1 << UMSEL0);
}

unsigned char UART_recieve(){
	//Wait for data by checking received flag (RXC0):
	while (!(UCSR0A & (1 << RXC0)));
 17c:	5f 9b       	sbis	0x0b, 7	; 11
 17e:	fe cf       	rjmp	.-4      	; 0x17c <UART_recieve>
	
	//Get data from buffer (UDR0) and return:
	return UDR0;
 180:	8c b1       	in	r24, 0x0c	; 12
}
 182:	08 95       	ret

00000184 <UART_transmit>:

void UART_transmit(unsigned char arg){
	
	//Check if transmit buffer is ready to receive new data:
	while (!(UCSR0A & (1 << UDRE0)));
 184:	5d 9b       	sbis	0x0b, 5	; 11
 186:	fe cf       	rjmp	.-4      	; 0x184 <UART_transmit>
	
	//Put data in transmit buffer:
	UDR0 = arg;
 188:	8c b9       	out	0x0c, r24	; 12
 18a:	08 95       	ret

0000018c <UART_init>:

#include <avr/io.h>

void UART_init(int ubrr){
	//Set baud rate from input:
	UBRR0L = (unsigned char)ubrr;
 18c:	89 b9       	out	0x09, r24	; 9
	
	//Enable UART 0 receive (RXEN0) and transfer (TXEN0):
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 18e:	88 e1       	ldi	r24, 0x18	; 24
 190:	8a b9       	out	0x0a, r24	; 10
	
	//Set register select (URSEL0), stop bit select (USBS0), character size (UCSZ00) and uart mode (UMSEL0):
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ00);
 192:	8e e8       	ldi	r24, 0x8E	; 142
 194:	80 bd       	out	0x20, r24	; 32
	UCSR0C &= !(1 << UMSEL0);
 196:	80 b5       	in	r24, 0x20	; 32
 198:	10 bc       	out	0x20, r1	; 32
 19a:	08 95       	ret

0000019c <UART_parsePrint>:
	UDR0 = arg;
}


void UART_parsePrint(){
	fdevopen(UART_transmit, UART_recieve);
 19c:	6e eb       	ldi	r22, 0xBE	; 190
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	82 ec       	ldi	r24, 0xC2	; 194
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 d5 00 	call	0x1aa	; 0x1aa <fdevopen>
 1a8:	08 95       	ret

000001aa <fdevopen>:
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	ec 01       	movw	r28, r24
 1b4:	8b 01       	movw	r16, r22
 1b6:	00 97       	sbiw	r24, 0x00	; 0
 1b8:	31 f4       	brne	.+12     	; 0x1c6 <fdevopen+0x1c>
 1ba:	61 15       	cp	r22, r1
 1bc:	71 05       	cpc	r23, r1
 1be:	19 f4       	brne	.+6      	; 0x1c6 <fdevopen+0x1c>
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	38 c0       	rjmp	.+112    	; 0x236 <fdevopen+0x8c>
 1c6:	6e e0       	ldi	r22, 0x0E	; 14
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 06 03 	call	0x60c	; 0x60c <calloc>
 1d2:	fc 01       	movw	r30, r24
 1d4:	00 97       	sbiw	r24, 0x00	; 0
 1d6:	a1 f3       	breq	.-24     	; 0x1c0 <fdevopen+0x16>
 1d8:	80 e8       	ldi	r24, 0x80	; 128
 1da:	83 83       	std	Z+3, r24	; 0x03
 1dc:	01 15       	cp	r16, r1
 1de:	11 05       	cpc	r17, r1
 1e0:	71 f0       	breq	.+28     	; 0x1fe <fdevopen+0x54>
 1e2:	13 87       	std	Z+11, r17	; 0x0b
 1e4:	02 87       	std	Z+10, r16	; 0x0a
 1e6:	81 e8       	ldi	r24, 0x81	; 129
 1e8:	83 83       	std	Z+3, r24	; 0x03
 1ea:	80 91 24 01 	lds	r24, 0x0124
 1ee:	90 91 25 01 	lds	r25, 0x0125
 1f2:	89 2b       	or	r24, r25
 1f4:	21 f4       	brne	.+8      	; 0x1fe <fdevopen+0x54>
 1f6:	f0 93 25 01 	sts	0x0125, r31
 1fa:	e0 93 24 01 	sts	0x0124, r30
 1fe:	20 97       	sbiw	r28, 0x00	; 0
 200:	c9 f0       	breq	.+50     	; 0x234 <fdevopen+0x8a>
 202:	d1 87       	std	Z+9, r29	; 0x09
 204:	c0 87       	std	Z+8, r28	; 0x08
 206:	83 81       	ldd	r24, Z+3	; 0x03
 208:	82 60       	ori	r24, 0x02	; 2
 20a:	83 83       	std	Z+3, r24	; 0x03
 20c:	80 91 26 01 	lds	r24, 0x0126
 210:	90 91 27 01 	lds	r25, 0x0127
 214:	89 2b       	or	r24, r25
 216:	71 f4       	brne	.+28     	; 0x234 <fdevopen+0x8a>
 218:	f0 93 27 01 	sts	0x0127, r31
 21c:	e0 93 26 01 	sts	0x0126, r30
 220:	80 91 28 01 	lds	r24, 0x0128
 224:	90 91 29 01 	lds	r25, 0x0129
 228:	89 2b       	or	r24, r25
 22a:	21 f4       	brne	.+8      	; 0x234 <fdevopen+0x8a>
 22c:	f0 93 29 01 	sts	0x0129, r31
 230:	e0 93 28 01 	sts	0x0128, r30
 234:	cf 01       	movw	r24, r30
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	08 95       	ret

00000240 <printf>:
 240:	a0 e0       	ldi	r26, 0x00	; 0
 242:	b0 e0       	ldi	r27, 0x00	; 0
 244:	e6 e2       	ldi	r30, 0x26	; 38
 246:	f1 e0       	ldi	r31, 0x01	; 1
 248:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__prologue_saves__+0x20>
 24c:	fe 01       	movw	r30, r28
 24e:	35 96       	adiw	r30, 0x05	; 5
 250:	61 91       	ld	r22, Z+
 252:	71 91       	ld	r23, Z+
 254:	af 01       	movw	r20, r30
 256:	80 91 26 01 	lds	r24, 0x0126
 25a:	90 91 27 01 	lds	r25, 0x0127
 25e:	0e 94 34 01 	call	0x268	; 0x268 <vfprintf>
 262:	e2 e0       	ldi	r30, 0x02	; 2
 264:	0c 94 22 05 	jmp	0xa44	; 0xa44 <__epilogue_restores__+0x20>

00000268 <vfprintf>:
 268:	ac e0       	ldi	r26, 0x0C	; 12
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	ea e3       	ldi	r30, 0x3A	; 58
 26e:	f1 e0       	ldi	r31, 0x01	; 1
 270:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <__prologue_saves__>
 274:	7c 01       	movw	r14, r24
 276:	6b 01       	movw	r12, r22
 278:	8a 01       	movw	r16, r20
 27a:	fc 01       	movw	r30, r24
 27c:	17 82       	std	Z+7, r1	; 0x07
 27e:	16 82       	std	Z+6, r1	; 0x06
 280:	83 81       	ldd	r24, Z+3	; 0x03
 282:	81 ff       	sbrs	r24, 1
 284:	bd c1       	rjmp	.+890    	; 0x600 <__stack+0x101>
 286:	ce 01       	movw	r24, r28
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	4c 01       	movw	r8, r24
 28c:	f7 01       	movw	r30, r14
 28e:	93 81       	ldd	r25, Z+3	; 0x03
 290:	f6 01       	movw	r30, r12
 292:	93 fd       	sbrc	r25, 3
 294:	85 91       	lpm	r24, Z+
 296:	93 ff       	sbrs	r25, 3
 298:	81 91       	ld	r24, Z+
 29a:	6f 01       	movw	r12, r30
 29c:	88 23       	and	r24, r24
 29e:	09 f4       	brne	.+2      	; 0x2a2 <vfprintf+0x3a>
 2a0:	ab c1       	rjmp	.+854    	; 0x5f8 <__stack+0xf9>
 2a2:	85 32       	cpi	r24, 0x25	; 37
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <vfprintf+0x4c>
 2a6:	93 fd       	sbrc	r25, 3
 2a8:	85 91       	lpm	r24, Z+
 2aa:	93 ff       	sbrs	r25, 3
 2ac:	81 91       	ld	r24, Z+
 2ae:	6f 01       	movw	r12, r30
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	29 f4       	brne	.+10     	; 0x2be <vfprintf+0x56>
 2b4:	b7 01       	movw	r22, r14
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 2bc:	e7 cf       	rjmp	.-50     	; 0x28c <vfprintf+0x24>
 2be:	51 2c       	mov	r5, r1
 2c0:	31 2c       	mov	r3, r1
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	20 32       	cpi	r18, 0x20	; 32
 2c6:	a0 f4       	brcc	.+40     	; 0x2f0 <vfprintf+0x88>
 2c8:	8b 32       	cpi	r24, 0x2B	; 43
 2ca:	69 f0       	breq	.+26     	; 0x2e6 <vfprintf+0x7e>
 2cc:	30 f4       	brcc	.+12     	; 0x2da <vfprintf+0x72>
 2ce:	80 32       	cpi	r24, 0x20	; 32
 2d0:	59 f0       	breq	.+22     	; 0x2e8 <vfprintf+0x80>
 2d2:	83 32       	cpi	r24, 0x23	; 35
 2d4:	69 f4       	brne	.+26     	; 0x2f0 <vfprintf+0x88>
 2d6:	20 61       	ori	r18, 0x10	; 16
 2d8:	2c c0       	rjmp	.+88     	; 0x332 <vfprintf+0xca>
 2da:	8d 32       	cpi	r24, 0x2D	; 45
 2dc:	39 f0       	breq	.+14     	; 0x2ec <vfprintf+0x84>
 2de:	80 33       	cpi	r24, 0x30	; 48
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <vfprintf+0x88>
 2e2:	21 60       	ori	r18, 0x01	; 1
 2e4:	26 c0       	rjmp	.+76     	; 0x332 <vfprintf+0xca>
 2e6:	22 60       	ori	r18, 0x02	; 2
 2e8:	24 60       	ori	r18, 0x04	; 4
 2ea:	23 c0       	rjmp	.+70     	; 0x332 <vfprintf+0xca>
 2ec:	28 60       	ori	r18, 0x08	; 8
 2ee:	21 c0       	rjmp	.+66     	; 0x332 <vfprintf+0xca>
 2f0:	27 fd       	sbrc	r18, 7
 2f2:	27 c0       	rjmp	.+78     	; 0x342 <vfprintf+0xda>
 2f4:	30 ed       	ldi	r19, 0xD0	; 208
 2f6:	38 0f       	add	r19, r24
 2f8:	3a 30       	cpi	r19, 0x0A	; 10
 2fa:	78 f4       	brcc	.+30     	; 0x31a <vfprintf+0xb2>
 2fc:	26 ff       	sbrs	r18, 6
 2fe:	06 c0       	rjmp	.+12     	; 0x30c <vfprintf+0xa4>
 300:	fa e0       	ldi	r31, 0x0A	; 10
 302:	5f 9e       	mul	r5, r31
 304:	30 0d       	add	r19, r0
 306:	11 24       	eor	r1, r1
 308:	53 2e       	mov	r5, r19
 30a:	13 c0       	rjmp	.+38     	; 0x332 <vfprintf+0xca>
 30c:	8a e0       	ldi	r24, 0x0A	; 10
 30e:	38 9e       	mul	r3, r24
 310:	30 0d       	add	r19, r0
 312:	11 24       	eor	r1, r1
 314:	33 2e       	mov	r3, r19
 316:	20 62       	ori	r18, 0x20	; 32
 318:	0c c0       	rjmp	.+24     	; 0x332 <vfprintf+0xca>
 31a:	8e 32       	cpi	r24, 0x2E	; 46
 31c:	21 f4       	brne	.+8      	; 0x326 <vfprintf+0xbe>
 31e:	26 fd       	sbrc	r18, 6
 320:	6b c1       	rjmp	.+726    	; 0x5f8 <__stack+0xf9>
 322:	20 64       	ori	r18, 0x40	; 64
 324:	06 c0       	rjmp	.+12     	; 0x332 <vfprintf+0xca>
 326:	8c 36       	cpi	r24, 0x6C	; 108
 328:	11 f4       	brne	.+4      	; 0x32e <vfprintf+0xc6>
 32a:	20 68       	ori	r18, 0x80	; 128
 32c:	02 c0       	rjmp	.+4      	; 0x332 <vfprintf+0xca>
 32e:	88 36       	cpi	r24, 0x68	; 104
 330:	41 f4       	brne	.+16     	; 0x342 <vfprintf+0xda>
 332:	f6 01       	movw	r30, r12
 334:	93 fd       	sbrc	r25, 3
 336:	85 91       	lpm	r24, Z+
 338:	93 ff       	sbrs	r25, 3
 33a:	81 91       	ld	r24, Z+
 33c:	6f 01       	movw	r12, r30
 33e:	81 11       	cpse	r24, r1
 340:	c1 cf       	rjmp	.-126    	; 0x2c4 <vfprintf+0x5c>
 342:	98 2f       	mov	r25, r24
 344:	9f 7d       	andi	r25, 0xDF	; 223
 346:	95 54       	subi	r25, 0x45	; 69
 348:	93 30       	cpi	r25, 0x03	; 3
 34a:	28 f4       	brcc	.+10     	; 0x356 <vfprintf+0xee>
 34c:	0c 5f       	subi	r16, 0xFC	; 252
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	ff e3       	ldi	r31, 0x3F	; 63
 352:	f9 83       	std	Y+1, r31	; 0x01
 354:	0d c0       	rjmp	.+26     	; 0x370 <vfprintf+0x108>
 356:	83 36       	cpi	r24, 0x63	; 99
 358:	31 f0       	breq	.+12     	; 0x366 <vfprintf+0xfe>
 35a:	83 37       	cpi	r24, 0x73	; 115
 35c:	71 f0       	breq	.+28     	; 0x37a <vfprintf+0x112>
 35e:	83 35       	cpi	r24, 0x53	; 83
 360:	09 f0       	breq	.+2      	; 0x364 <vfprintf+0xfc>
 362:	5b c0       	rjmp	.+182    	; 0x41a <vfprintf+0x1b2>
 364:	22 c0       	rjmp	.+68     	; 0x3aa <vfprintf+0x142>
 366:	f8 01       	movw	r30, r16
 368:	80 81       	ld	r24, Z
 36a:	89 83       	std	Y+1, r24	; 0x01
 36c:	0e 5f       	subi	r16, 0xFE	; 254
 36e:	1f 4f       	sbci	r17, 0xFF	; 255
 370:	44 24       	eor	r4, r4
 372:	43 94       	inc	r4
 374:	51 2c       	mov	r5, r1
 376:	54 01       	movw	r10, r8
 378:	15 c0       	rjmp	.+42     	; 0x3a4 <vfprintf+0x13c>
 37a:	38 01       	movw	r6, r16
 37c:	f2 e0       	ldi	r31, 0x02	; 2
 37e:	6f 0e       	add	r6, r31
 380:	71 1c       	adc	r7, r1
 382:	f8 01       	movw	r30, r16
 384:	a0 80       	ld	r10, Z
 386:	b1 80       	ldd	r11, Z+1	; 0x01
 388:	26 ff       	sbrs	r18, 6
 38a:	03 c0       	rjmp	.+6      	; 0x392 <vfprintf+0x12a>
 38c:	65 2d       	mov	r22, r5
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <vfprintf+0x12e>
 392:	6f ef       	ldi	r22, 0xFF	; 255
 394:	7f ef       	ldi	r23, 0xFF	; 255
 396:	c5 01       	movw	r24, r10
 398:	2c 87       	std	Y+12, r18	; 0x0c
 39a:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <strnlen>
 39e:	2c 01       	movw	r4, r24
 3a0:	83 01       	movw	r16, r6
 3a2:	2c 85       	ldd	r18, Y+12	; 0x0c
 3a4:	2f 77       	andi	r18, 0x7F	; 127
 3a6:	22 2e       	mov	r2, r18
 3a8:	17 c0       	rjmp	.+46     	; 0x3d8 <vfprintf+0x170>
 3aa:	38 01       	movw	r6, r16
 3ac:	f2 e0       	ldi	r31, 0x02	; 2
 3ae:	6f 0e       	add	r6, r31
 3b0:	71 1c       	adc	r7, r1
 3b2:	f8 01       	movw	r30, r16
 3b4:	a0 80       	ld	r10, Z
 3b6:	b1 80       	ldd	r11, Z+1	; 0x01
 3b8:	26 ff       	sbrs	r18, 6
 3ba:	03 c0       	rjmp	.+6      	; 0x3c2 <vfprintf+0x15a>
 3bc:	65 2d       	mov	r22, r5
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <vfprintf+0x15e>
 3c2:	6f ef       	ldi	r22, 0xFF	; 255
 3c4:	7f ef       	ldi	r23, 0xFF	; 255
 3c6:	c5 01       	movw	r24, r10
 3c8:	2c 87       	std	Y+12, r18	; 0x0c
 3ca:	0e 94 49 04 	call	0x892	; 0x892 <strnlen_P>
 3ce:	2c 01       	movw	r4, r24
 3d0:	2c 85       	ldd	r18, Y+12	; 0x0c
 3d2:	20 68       	ori	r18, 0x80	; 128
 3d4:	22 2e       	mov	r2, r18
 3d6:	83 01       	movw	r16, r6
 3d8:	23 fc       	sbrc	r2, 3
 3da:	1b c0       	rjmp	.+54     	; 0x412 <vfprintf+0x1aa>
 3dc:	83 2d       	mov	r24, r3
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	48 16       	cp	r4, r24
 3e2:	59 06       	cpc	r5, r25
 3e4:	b0 f4       	brcc	.+44     	; 0x412 <vfprintf+0x1aa>
 3e6:	b7 01       	movw	r22, r14
 3e8:	80 e2       	ldi	r24, 0x20	; 32
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 3f0:	3a 94       	dec	r3
 3f2:	f4 cf       	rjmp	.-24     	; 0x3dc <vfprintf+0x174>
 3f4:	f5 01       	movw	r30, r10
 3f6:	27 fc       	sbrc	r2, 7
 3f8:	85 91       	lpm	r24, Z+
 3fa:	27 fe       	sbrs	r2, 7
 3fc:	81 91       	ld	r24, Z+
 3fe:	5f 01       	movw	r10, r30
 400:	b7 01       	movw	r22, r14
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 408:	31 10       	cpse	r3, r1
 40a:	3a 94       	dec	r3
 40c:	f1 e0       	ldi	r31, 0x01	; 1
 40e:	4f 1a       	sub	r4, r31
 410:	51 08       	sbc	r5, r1
 412:	41 14       	cp	r4, r1
 414:	51 04       	cpc	r5, r1
 416:	71 f7       	brne	.-36     	; 0x3f4 <vfprintf+0x18c>
 418:	e5 c0       	rjmp	.+458    	; 0x5e4 <__stack+0xe5>
 41a:	84 36       	cpi	r24, 0x64	; 100
 41c:	11 f0       	breq	.+4      	; 0x422 <vfprintf+0x1ba>
 41e:	89 36       	cpi	r24, 0x69	; 105
 420:	39 f5       	brne	.+78     	; 0x470 <vfprintf+0x208>
 422:	f8 01       	movw	r30, r16
 424:	27 ff       	sbrs	r18, 7
 426:	07 c0       	rjmp	.+14     	; 0x436 <vfprintf+0x1ce>
 428:	60 81       	ld	r22, Z
 42a:	71 81       	ldd	r23, Z+1	; 0x01
 42c:	82 81       	ldd	r24, Z+2	; 0x02
 42e:	93 81       	ldd	r25, Z+3	; 0x03
 430:	0c 5f       	subi	r16, 0xFC	; 252
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	08 c0       	rjmp	.+16     	; 0x446 <vfprintf+0x1de>
 436:	60 81       	ld	r22, Z
 438:	71 81       	ldd	r23, Z+1	; 0x01
 43a:	88 27       	eor	r24, r24
 43c:	77 fd       	sbrc	r23, 7
 43e:	80 95       	com	r24
 440:	98 2f       	mov	r25, r24
 442:	0e 5f       	subi	r16, 0xFE	; 254
 444:	1f 4f       	sbci	r17, 0xFF	; 255
 446:	2f 76       	andi	r18, 0x6F	; 111
 448:	b2 2e       	mov	r11, r18
 44a:	97 ff       	sbrs	r25, 7
 44c:	09 c0       	rjmp	.+18     	; 0x460 <vfprintf+0x1f8>
 44e:	90 95       	com	r25
 450:	80 95       	com	r24
 452:	70 95       	com	r23
 454:	61 95       	neg	r22
 456:	7f 4f       	sbci	r23, 0xFF	; 255
 458:	8f 4f       	sbci	r24, 0xFF	; 255
 45a:	9f 4f       	sbci	r25, 0xFF	; 255
 45c:	20 68       	ori	r18, 0x80	; 128
 45e:	b2 2e       	mov	r11, r18
 460:	2a e0       	ldi	r18, 0x0A	; 10
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	a4 01       	movw	r20, r8
 466:	0e 94 98 04 	call	0x930	; 0x930 <__ultoa_invert>
 46a:	a8 2e       	mov	r10, r24
 46c:	a8 18       	sub	r10, r8
 46e:	44 c0       	rjmp	.+136    	; 0x4f8 <vfprintf+0x290>
 470:	85 37       	cpi	r24, 0x75	; 117
 472:	29 f4       	brne	.+10     	; 0x47e <vfprintf+0x216>
 474:	2f 7e       	andi	r18, 0xEF	; 239
 476:	b2 2e       	mov	r11, r18
 478:	2a e0       	ldi	r18, 0x0A	; 10
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	25 c0       	rjmp	.+74     	; 0x4c8 <vfprintf+0x260>
 47e:	f2 2f       	mov	r31, r18
 480:	f9 7f       	andi	r31, 0xF9	; 249
 482:	bf 2e       	mov	r11, r31
 484:	8f 36       	cpi	r24, 0x6F	; 111
 486:	c1 f0       	breq	.+48     	; 0x4b8 <vfprintf+0x250>
 488:	18 f4       	brcc	.+6      	; 0x490 <vfprintf+0x228>
 48a:	88 35       	cpi	r24, 0x58	; 88
 48c:	79 f0       	breq	.+30     	; 0x4ac <vfprintf+0x244>
 48e:	b4 c0       	rjmp	.+360    	; 0x5f8 <__stack+0xf9>
 490:	80 37       	cpi	r24, 0x70	; 112
 492:	19 f0       	breq	.+6      	; 0x49a <vfprintf+0x232>
 494:	88 37       	cpi	r24, 0x78	; 120
 496:	21 f0       	breq	.+8      	; 0x4a0 <vfprintf+0x238>
 498:	af c0       	rjmp	.+350    	; 0x5f8 <__stack+0xf9>
 49a:	2f 2f       	mov	r18, r31
 49c:	20 61       	ori	r18, 0x10	; 16
 49e:	b2 2e       	mov	r11, r18
 4a0:	b4 fe       	sbrs	r11, 4
 4a2:	0d c0       	rjmp	.+26     	; 0x4be <vfprintf+0x256>
 4a4:	8b 2d       	mov	r24, r11
 4a6:	84 60       	ori	r24, 0x04	; 4
 4a8:	b8 2e       	mov	r11, r24
 4aa:	09 c0       	rjmp	.+18     	; 0x4be <vfprintf+0x256>
 4ac:	24 ff       	sbrs	r18, 4
 4ae:	0a c0       	rjmp	.+20     	; 0x4c4 <vfprintf+0x25c>
 4b0:	9f 2f       	mov	r25, r31
 4b2:	96 60       	ori	r25, 0x06	; 6
 4b4:	b9 2e       	mov	r11, r25
 4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <vfprintf+0x25c>
 4b8:	28 e0       	ldi	r18, 0x08	; 8
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <vfprintf+0x260>
 4be:	20 e1       	ldi	r18, 0x10	; 16
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <vfprintf+0x260>
 4c4:	20 e1       	ldi	r18, 0x10	; 16
 4c6:	32 e0       	ldi	r19, 0x02	; 2
 4c8:	f8 01       	movw	r30, r16
 4ca:	b7 fe       	sbrs	r11, 7
 4cc:	07 c0       	rjmp	.+14     	; 0x4dc <vfprintf+0x274>
 4ce:	60 81       	ld	r22, Z
 4d0:	71 81       	ldd	r23, Z+1	; 0x01
 4d2:	82 81       	ldd	r24, Z+2	; 0x02
 4d4:	93 81       	ldd	r25, Z+3	; 0x03
 4d6:	0c 5f       	subi	r16, 0xFC	; 252
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	06 c0       	rjmp	.+12     	; 0x4e8 <vfprintf+0x280>
 4dc:	60 81       	ld	r22, Z
 4de:	71 81       	ldd	r23, Z+1	; 0x01
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 5f       	subi	r16, 0xFE	; 254
 4e6:	1f 4f       	sbci	r17, 0xFF	; 255
 4e8:	a4 01       	movw	r20, r8
 4ea:	0e 94 98 04 	call	0x930	; 0x930 <__ultoa_invert>
 4ee:	a8 2e       	mov	r10, r24
 4f0:	a8 18       	sub	r10, r8
 4f2:	fb 2d       	mov	r31, r11
 4f4:	ff 77       	andi	r31, 0x7F	; 127
 4f6:	bf 2e       	mov	r11, r31
 4f8:	b6 fe       	sbrs	r11, 6
 4fa:	0b c0       	rjmp	.+22     	; 0x512 <__stack+0x13>
 4fc:	2b 2d       	mov	r18, r11
 4fe:	2e 7f       	andi	r18, 0xFE	; 254
 500:	a5 14       	cp	r10, r5
 502:	50 f4       	brcc	.+20     	; 0x518 <__stack+0x19>
 504:	b4 fe       	sbrs	r11, 4
 506:	0a c0       	rjmp	.+20     	; 0x51c <__stack+0x1d>
 508:	b2 fc       	sbrc	r11, 2
 50a:	08 c0       	rjmp	.+16     	; 0x51c <__stack+0x1d>
 50c:	2b 2d       	mov	r18, r11
 50e:	2e 7e       	andi	r18, 0xEE	; 238
 510:	05 c0       	rjmp	.+10     	; 0x51c <__stack+0x1d>
 512:	7a 2c       	mov	r7, r10
 514:	2b 2d       	mov	r18, r11
 516:	03 c0       	rjmp	.+6      	; 0x51e <__stack+0x1f>
 518:	7a 2c       	mov	r7, r10
 51a:	01 c0       	rjmp	.+2      	; 0x51e <__stack+0x1f>
 51c:	75 2c       	mov	r7, r5
 51e:	24 ff       	sbrs	r18, 4
 520:	0d c0       	rjmp	.+26     	; 0x53c <__stack+0x3d>
 522:	fe 01       	movw	r30, r28
 524:	ea 0d       	add	r30, r10
 526:	f1 1d       	adc	r31, r1
 528:	80 81       	ld	r24, Z
 52a:	80 33       	cpi	r24, 0x30	; 48
 52c:	11 f4       	brne	.+4      	; 0x532 <__stack+0x33>
 52e:	29 7e       	andi	r18, 0xE9	; 233
 530:	09 c0       	rjmp	.+18     	; 0x544 <__stack+0x45>
 532:	22 ff       	sbrs	r18, 2
 534:	06 c0       	rjmp	.+12     	; 0x542 <__stack+0x43>
 536:	73 94       	inc	r7
 538:	73 94       	inc	r7
 53a:	04 c0       	rjmp	.+8      	; 0x544 <__stack+0x45>
 53c:	82 2f       	mov	r24, r18
 53e:	86 78       	andi	r24, 0x86	; 134
 540:	09 f0       	breq	.+2      	; 0x544 <__stack+0x45>
 542:	73 94       	inc	r7
 544:	23 fd       	sbrc	r18, 3
 546:	13 c0       	rjmp	.+38     	; 0x56e <__stack+0x6f>
 548:	20 ff       	sbrs	r18, 0
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__stack+0x59>
 54c:	5a 2c       	mov	r5, r10
 54e:	73 14       	cp	r7, r3
 550:	18 f4       	brcc	.+6      	; 0x558 <__stack+0x59>
 552:	53 0c       	add	r5, r3
 554:	57 18       	sub	r5, r7
 556:	73 2c       	mov	r7, r3
 558:	73 14       	cp	r7, r3
 55a:	68 f4       	brcc	.+26     	; 0x576 <__stack+0x77>
 55c:	b7 01       	movw	r22, r14
 55e:	80 e2       	ldi	r24, 0x20	; 32
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	2c 87       	std	Y+12, r18	; 0x0c
 564:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 568:	73 94       	inc	r7
 56a:	2c 85       	ldd	r18, Y+12	; 0x0c
 56c:	f5 cf       	rjmp	.-22     	; 0x558 <__stack+0x59>
 56e:	73 14       	cp	r7, r3
 570:	10 f4       	brcc	.+4      	; 0x576 <__stack+0x77>
 572:	37 18       	sub	r3, r7
 574:	01 c0       	rjmp	.+2      	; 0x578 <__stack+0x79>
 576:	31 2c       	mov	r3, r1
 578:	24 ff       	sbrs	r18, 4
 57a:	12 c0       	rjmp	.+36     	; 0x5a0 <__stack+0xa1>
 57c:	b7 01       	movw	r22, r14
 57e:	80 e3       	ldi	r24, 0x30	; 48
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	2c 87       	std	Y+12, r18	; 0x0c
 584:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 588:	2c 85       	ldd	r18, Y+12	; 0x0c
 58a:	22 ff       	sbrs	r18, 2
 58c:	17 c0       	rjmp	.+46     	; 0x5bc <__stack+0xbd>
 58e:	21 ff       	sbrs	r18, 1
 590:	03 c0       	rjmp	.+6      	; 0x598 <__stack+0x99>
 592:	88 e5       	ldi	r24, 0x58	; 88
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 c0       	rjmp	.+4      	; 0x59c <__stack+0x9d>
 598:	88 e7       	ldi	r24, 0x78	; 120
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	b7 01       	movw	r22, r14
 59e:	0c c0       	rjmp	.+24     	; 0x5b8 <__stack+0xb9>
 5a0:	82 2f       	mov	r24, r18
 5a2:	86 78       	andi	r24, 0x86	; 134
 5a4:	59 f0       	breq	.+22     	; 0x5bc <__stack+0xbd>
 5a6:	21 fd       	sbrc	r18, 1
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__stack+0xaf>
 5aa:	80 e2       	ldi	r24, 0x20	; 32
 5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <__stack+0xb1>
 5ae:	8b e2       	ldi	r24, 0x2B	; 43
 5b0:	27 fd       	sbrc	r18, 7
 5b2:	8d e2       	ldi	r24, 0x2D	; 45
 5b4:	b7 01       	movw	r22, r14
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 5bc:	a5 14       	cp	r10, r5
 5be:	38 f4       	brcc	.+14     	; 0x5ce <__stack+0xcf>
 5c0:	b7 01       	movw	r22, r14
 5c2:	80 e3       	ldi	r24, 0x30	; 48
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 5ca:	5a 94       	dec	r5
 5cc:	f7 cf       	rjmp	.-18     	; 0x5bc <__stack+0xbd>
 5ce:	aa 94       	dec	r10
 5d0:	f4 01       	movw	r30, r8
 5d2:	ea 0d       	add	r30, r10
 5d4:	f1 1d       	adc	r31, r1
 5d6:	80 81       	ld	r24, Z
 5d8:	b7 01       	movw	r22, r14
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 5e0:	a1 10       	cpse	r10, r1
 5e2:	f5 cf       	rjmp	.-22     	; 0x5ce <__stack+0xcf>
 5e4:	33 20       	and	r3, r3
 5e6:	09 f4       	brne	.+2      	; 0x5ea <__stack+0xeb>
 5e8:	51 ce       	rjmp	.-862    	; 0x28c <vfprintf+0x24>
 5ea:	b7 01       	movw	r22, r14
 5ec:	80 e2       	ldi	r24, 0x20	; 32
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 66 04 	call	0x8cc	; 0x8cc <fputc>
 5f4:	3a 94       	dec	r3
 5f6:	f6 cf       	rjmp	.-20     	; 0x5e4 <__stack+0xe5>
 5f8:	f7 01       	movw	r30, r14
 5fa:	86 81       	ldd	r24, Z+6	; 0x06
 5fc:	97 81       	ldd	r25, Z+7	; 0x07
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__stack+0x105>
 600:	8f ef       	ldi	r24, 0xFF	; 255
 602:	9f ef       	ldi	r25, 0xFF	; 255
 604:	2c 96       	adiw	r28, 0x0c	; 12
 606:	e2 e1       	ldi	r30, 0x12	; 18
 608:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__epilogue_restores__>

0000060c <calloc>:
 60c:	0f 93       	push	r16
 60e:	1f 93       	push	r17
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	86 9f       	mul	r24, r22
 616:	80 01       	movw	r16, r0
 618:	87 9f       	mul	r24, r23
 61a:	10 0d       	add	r17, r0
 61c:	96 9f       	mul	r25, r22
 61e:	10 0d       	add	r17, r0
 620:	11 24       	eor	r1, r1
 622:	c8 01       	movw	r24, r16
 624:	0e 94 22 03 	call	0x644	; 0x644 <malloc>
 628:	ec 01       	movw	r28, r24
 62a:	00 97       	sbiw	r24, 0x00	; 0
 62c:	29 f0       	breq	.+10     	; 0x638 <calloc+0x2c>
 62e:	a8 01       	movw	r20, r16
 630:	60 e0       	ldi	r22, 0x00	; 0
 632:	70 e0       	ldi	r23, 0x00	; 0
 634:	0e 94 54 04 	call	0x8a8	; 0x8a8 <memset>
 638:	ce 01       	movw	r24, r28
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	08 95       	ret

00000644 <malloc>:
 644:	cf 93       	push	r28
 646:	df 93       	push	r29
 648:	82 30       	cpi	r24, 0x02	; 2
 64a:	91 05       	cpc	r25, r1
 64c:	10 f4       	brcc	.+4      	; 0x652 <malloc+0xe>
 64e:	82 e0       	ldi	r24, 0x02	; 2
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	e0 91 2c 01 	lds	r30, 0x012C
 656:	f0 91 2d 01 	lds	r31, 0x012D
 65a:	20 e0       	ldi	r18, 0x00	; 0
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	a0 e0       	ldi	r26, 0x00	; 0
 660:	b0 e0       	ldi	r27, 0x00	; 0
 662:	30 97       	sbiw	r30, 0x00	; 0
 664:	39 f1       	breq	.+78     	; 0x6b4 <malloc+0x70>
 666:	40 81       	ld	r20, Z
 668:	51 81       	ldd	r21, Z+1	; 0x01
 66a:	48 17       	cp	r20, r24
 66c:	59 07       	cpc	r21, r25
 66e:	b8 f0       	brcs	.+46     	; 0x69e <malloc+0x5a>
 670:	48 17       	cp	r20, r24
 672:	59 07       	cpc	r21, r25
 674:	71 f4       	brne	.+28     	; 0x692 <malloc+0x4e>
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	93 81       	ldd	r25, Z+3	; 0x03
 67a:	10 97       	sbiw	r26, 0x00	; 0
 67c:	29 f0       	breq	.+10     	; 0x688 <malloc+0x44>
 67e:	13 96       	adiw	r26, 0x03	; 3
 680:	9c 93       	st	X, r25
 682:	8e 93       	st	-X, r24
 684:	12 97       	sbiw	r26, 0x02	; 2
 686:	2c c0       	rjmp	.+88     	; 0x6e0 <malloc+0x9c>
 688:	90 93 2d 01 	sts	0x012D, r25
 68c:	80 93 2c 01 	sts	0x012C, r24
 690:	27 c0       	rjmp	.+78     	; 0x6e0 <malloc+0x9c>
 692:	21 15       	cp	r18, r1
 694:	31 05       	cpc	r19, r1
 696:	31 f0       	breq	.+12     	; 0x6a4 <malloc+0x60>
 698:	42 17       	cp	r20, r18
 69a:	53 07       	cpc	r21, r19
 69c:	18 f0       	brcs	.+6      	; 0x6a4 <malloc+0x60>
 69e:	a9 01       	movw	r20, r18
 6a0:	db 01       	movw	r26, r22
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <malloc+0x62>
 6a4:	ef 01       	movw	r28, r30
 6a6:	9a 01       	movw	r18, r20
 6a8:	bd 01       	movw	r22, r26
 6aa:	df 01       	movw	r26, r30
 6ac:	02 80       	ldd	r0, Z+2	; 0x02
 6ae:	f3 81       	ldd	r31, Z+3	; 0x03
 6b0:	e0 2d       	mov	r30, r0
 6b2:	d7 cf       	rjmp	.-82     	; 0x662 <malloc+0x1e>
 6b4:	21 15       	cp	r18, r1
 6b6:	31 05       	cpc	r19, r1
 6b8:	f9 f0       	breq	.+62     	; 0x6f8 <malloc+0xb4>
 6ba:	28 1b       	sub	r18, r24
 6bc:	39 0b       	sbc	r19, r25
 6be:	24 30       	cpi	r18, 0x04	; 4
 6c0:	31 05       	cpc	r19, r1
 6c2:	80 f4       	brcc	.+32     	; 0x6e4 <malloc+0xa0>
 6c4:	8a 81       	ldd	r24, Y+2	; 0x02
 6c6:	9b 81       	ldd	r25, Y+3	; 0x03
 6c8:	61 15       	cp	r22, r1
 6ca:	71 05       	cpc	r23, r1
 6cc:	21 f0       	breq	.+8      	; 0x6d6 <malloc+0x92>
 6ce:	fb 01       	movw	r30, r22
 6d0:	93 83       	std	Z+3, r25	; 0x03
 6d2:	82 83       	std	Z+2, r24	; 0x02
 6d4:	04 c0       	rjmp	.+8      	; 0x6de <malloc+0x9a>
 6d6:	90 93 2d 01 	sts	0x012D, r25
 6da:	80 93 2c 01 	sts	0x012C, r24
 6de:	fe 01       	movw	r30, r28
 6e0:	32 96       	adiw	r30, 0x02	; 2
 6e2:	44 c0       	rjmp	.+136    	; 0x76c <malloc+0x128>
 6e4:	fe 01       	movw	r30, r28
 6e6:	e2 0f       	add	r30, r18
 6e8:	f3 1f       	adc	r31, r19
 6ea:	81 93       	st	Z+, r24
 6ec:	91 93       	st	Z+, r25
 6ee:	22 50       	subi	r18, 0x02	; 2
 6f0:	31 09       	sbc	r19, r1
 6f2:	39 83       	std	Y+1, r19	; 0x01
 6f4:	28 83       	st	Y, r18
 6f6:	3a c0       	rjmp	.+116    	; 0x76c <malloc+0x128>
 6f8:	20 91 2a 01 	lds	r18, 0x012A
 6fc:	30 91 2b 01 	lds	r19, 0x012B
 700:	23 2b       	or	r18, r19
 702:	41 f4       	brne	.+16     	; 0x714 <malloc+0xd0>
 704:	20 91 02 01 	lds	r18, 0x0102
 708:	30 91 03 01 	lds	r19, 0x0103
 70c:	30 93 2b 01 	sts	0x012B, r19
 710:	20 93 2a 01 	sts	0x012A, r18
 714:	20 91 00 01 	lds	r18, 0x0100
 718:	30 91 01 01 	lds	r19, 0x0101
 71c:	21 15       	cp	r18, r1
 71e:	31 05       	cpc	r19, r1
 720:	41 f4       	brne	.+16     	; 0x732 <malloc+0xee>
 722:	2d b7       	in	r18, 0x3d	; 61
 724:	3e b7       	in	r19, 0x3e	; 62
 726:	40 91 04 01 	lds	r20, 0x0104
 72a:	50 91 05 01 	lds	r21, 0x0105
 72e:	24 1b       	sub	r18, r20
 730:	35 0b       	sbc	r19, r21
 732:	e0 91 2a 01 	lds	r30, 0x012A
 736:	f0 91 2b 01 	lds	r31, 0x012B
 73a:	e2 17       	cp	r30, r18
 73c:	f3 07       	cpc	r31, r19
 73e:	a0 f4       	brcc	.+40     	; 0x768 <malloc+0x124>
 740:	2e 1b       	sub	r18, r30
 742:	3f 0b       	sbc	r19, r31
 744:	28 17       	cp	r18, r24
 746:	39 07       	cpc	r19, r25
 748:	78 f0       	brcs	.+30     	; 0x768 <malloc+0x124>
 74a:	ac 01       	movw	r20, r24
 74c:	4e 5f       	subi	r20, 0xFE	; 254
 74e:	5f 4f       	sbci	r21, 0xFF	; 255
 750:	24 17       	cp	r18, r20
 752:	35 07       	cpc	r19, r21
 754:	48 f0       	brcs	.+18     	; 0x768 <malloc+0x124>
 756:	4e 0f       	add	r20, r30
 758:	5f 1f       	adc	r21, r31
 75a:	50 93 2b 01 	sts	0x012B, r21
 75e:	40 93 2a 01 	sts	0x012A, r20
 762:	81 93       	st	Z+, r24
 764:	91 93       	st	Z+, r25
 766:	02 c0       	rjmp	.+4      	; 0x76c <malloc+0x128>
 768:	e0 e0       	ldi	r30, 0x00	; 0
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	cf 01       	movw	r24, r30
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	08 95       	ret

00000774 <free>:
 774:	cf 93       	push	r28
 776:	df 93       	push	r29
 778:	00 97       	sbiw	r24, 0x00	; 0
 77a:	09 f4       	brne	.+2      	; 0x77e <free+0xa>
 77c:	87 c0       	rjmp	.+270    	; 0x88c <free+0x118>
 77e:	fc 01       	movw	r30, r24
 780:	32 97       	sbiw	r30, 0x02	; 2
 782:	13 82       	std	Z+3, r1	; 0x03
 784:	12 82       	std	Z+2, r1	; 0x02
 786:	c0 91 2c 01 	lds	r28, 0x012C
 78a:	d0 91 2d 01 	lds	r29, 0x012D
 78e:	20 97       	sbiw	r28, 0x00	; 0
 790:	81 f4       	brne	.+32     	; 0x7b2 <free+0x3e>
 792:	20 81       	ld	r18, Z
 794:	31 81       	ldd	r19, Z+1	; 0x01
 796:	28 0f       	add	r18, r24
 798:	39 1f       	adc	r19, r25
 79a:	80 91 2a 01 	lds	r24, 0x012A
 79e:	90 91 2b 01 	lds	r25, 0x012B
 7a2:	82 17       	cp	r24, r18
 7a4:	93 07       	cpc	r25, r19
 7a6:	79 f5       	brne	.+94     	; 0x806 <free+0x92>
 7a8:	f0 93 2b 01 	sts	0x012B, r31
 7ac:	e0 93 2a 01 	sts	0x012A, r30
 7b0:	6d c0       	rjmp	.+218    	; 0x88c <free+0x118>
 7b2:	de 01       	movw	r26, r28
 7b4:	20 e0       	ldi	r18, 0x00	; 0
 7b6:	30 e0       	ldi	r19, 0x00	; 0
 7b8:	ae 17       	cp	r26, r30
 7ba:	bf 07       	cpc	r27, r31
 7bc:	50 f4       	brcc	.+20     	; 0x7d2 <free+0x5e>
 7be:	12 96       	adiw	r26, 0x02	; 2
 7c0:	4d 91       	ld	r20, X+
 7c2:	5c 91       	ld	r21, X
 7c4:	13 97       	sbiw	r26, 0x03	; 3
 7c6:	9d 01       	movw	r18, r26
 7c8:	41 15       	cp	r20, r1
 7ca:	51 05       	cpc	r21, r1
 7cc:	09 f1       	breq	.+66     	; 0x810 <free+0x9c>
 7ce:	da 01       	movw	r26, r20
 7d0:	f3 cf       	rjmp	.-26     	; 0x7b8 <free+0x44>
 7d2:	b3 83       	std	Z+3, r27	; 0x03
 7d4:	a2 83       	std	Z+2, r26	; 0x02
 7d6:	40 81       	ld	r20, Z
 7d8:	51 81       	ldd	r21, Z+1	; 0x01
 7da:	84 0f       	add	r24, r20
 7dc:	95 1f       	adc	r25, r21
 7de:	8a 17       	cp	r24, r26
 7e0:	9b 07       	cpc	r25, r27
 7e2:	71 f4       	brne	.+28     	; 0x800 <free+0x8c>
 7e4:	8d 91       	ld	r24, X+
 7e6:	9c 91       	ld	r25, X
 7e8:	11 97       	sbiw	r26, 0x01	; 1
 7ea:	84 0f       	add	r24, r20
 7ec:	95 1f       	adc	r25, r21
 7ee:	02 96       	adiw	r24, 0x02	; 2
 7f0:	91 83       	std	Z+1, r25	; 0x01
 7f2:	80 83       	st	Z, r24
 7f4:	12 96       	adiw	r26, 0x02	; 2
 7f6:	8d 91       	ld	r24, X+
 7f8:	9c 91       	ld	r25, X
 7fa:	13 97       	sbiw	r26, 0x03	; 3
 7fc:	93 83       	std	Z+3, r25	; 0x03
 7fe:	82 83       	std	Z+2, r24	; 0x02
 800:	21 15       	cp	r18, r1
 802:	31 05       	cpc	r19, r1
 804:	29 f4       	brne	.+10     	; 0x810 <free+0x9c>
 806:	f0 93 2d 01 	sts	0x012D, r31
 80a:	e0 93 2c 01 	sts	0x012C, r30
 80e:	3e c0       	rjmp	.+124    	; 0x88c <free+0x118>
 810:	d9 01       	movw	r26, r18
 812:	13 96       	adiw	r26, 0x03	; 3
 814:	fc 93       	st	X, r31
 816:	ee 93       	st	-X, r30
 818:	12 97       	sbiw	r26, 0x02	; 2
 81a:	4d 91       	ld	r20, X+
 81c:	5d 91       	ld	r21, X+
 81e:	a4 0f       	add	r26, r20
 820:	b5 1f       	adc	r27, r21
 822:	ea 17       	cp	r30, r26
 824:	fb 07       	cpc	r31, r27
 826:	79 f4       	brne	.+30     	; 0x846 <free+0xd2>
 828:	80 81       	ld	r24, Z
 82a:	91 81       	ldd	r25, Z+1	; 0x01
 82c:	84 0f       	add	r24, r20
 82e:	95 1f       	adc	r25, r21
 830:	02 96       	adiw	r24, 0x02	; 2
 832:	d9 01       	movw	r26, r18
 834:	11 96       	adiw	r26, 0x01	; 1
 836:	9c 93       	st	X, r25
 838:	8e 93       	st	-X, r24
 83a:	82 81       	ldd	r24, Z+2	; 0x02
 83c:	93 81       	ldd	r25, Z+3	; 0x03
 83e:	13 96       	adiw	r26, 0x03	; 3
 840:	9c 93       	st	X, r25
 842:	8e 93       	st	-X, r24
 844:	12 97       	sbiw	r26, 0x02	; 2
 846:	e0 e0       	ldi	r30, 0x00	; 0
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	8a 81       	ldd	r24, Y+2	; 0x02
 84c:	9b 81       	ldd	r25, Y+3	; 0x03
 84e:	00 97       	sbiw	r24, 0x00	; 0
 850:	19 f0       	breq	.+6      	; 0x858 <free+0xe4>
 852:	fe 01       	movw	r30, r28
 854:	ec 01       	movw	r28, r24
 856:	f9 cf       	rjmp	.-14     	; 0x84a <free+0xd6>
 858:	ce 01       	movw	r24, r28
 85a:	02 96       	adiw	r24, 0x02	; 2
 85c:	28 81       	ld	r18, Y
 85e:	39 81       	ldd	r19, Y+1	; 0x01
 860:	82 0f       	add	r24, r18
 862:	93 1f       	adc	r25, r19
 864:	20 91 2a 01 	lds	r18, 0x012A
 868:	30 91 2b 01 	lds	r19, 0x012B
 86c:	28 17       	cp	r18, r24
 86e:	39 07       	cpc	r19, r25
 870:	69 f4       	brne	.+26     	; 0x88c <free+0x118>
 872:	30 97       	sbiw	r30, 0x00	; 0
 874:	29 f4       	brne	.+10     	; 0x880 <free+0x10c>
 876:	10 92 2d 01 	sts	0x012D, r1
 87a:	10 92 2c 01 	sts	0x012C, r1
 87e:	02 c0       	rjmp	.+4      	; 0x884 <free+0x110>
 880:	13 82       	std	Z+3, r1	; 0x03
 882:	12 82       	std	Z+2, r1	; 0x02
 884:	d0 93 2b 01 	sts	0x012B, r29
 888:	c0 93 2a 01 	sts	0x012A, r28
 88c:	df 91       	pop	r29
 88e:	cf 91       	pop	r28
 890:	08 95       	ret

00000892 <strnlen_P>:
 892:	fc 01       	movw	r30, r24
 894:	05 90       	lpm	r0, Z+
 896:	61 50       	subi	r22, 0x01	; 1
 898:	70 40       	sbci	r23, 0x00	; 0
 89a:	01 10       	cpse	r0, r1
 89c:	d8 f7       	brcc	.-10     	; 0x894 <strnlen_P+0x2>
 89e:	80 95       	com	r24
 8a0:	90 95       	com	r25
 8a2:	8e 0f       	add	r24, r30
 8a4:	9f 1f       	adc	r25, r31
 8a6:	08 95       	ret

000008a8 <memset>:
 8a8:	dc 01       	movw	r26, r24
 8aa:	01 c0       	rjmp	.+2      	; 0x8ae <memset+0x6>
 8ac:	6d 93       	st	X+, r22
 8ae:	41 50       	subi	r20, 0x01	; 1
 8b0:	50 40       	sbci	r21, 0x00	; 0
 8b2:	e0 f7       	brcc	.-8      	; 0x8ac <memset+0x4>
 8b4:	08 95       	ret

000008b6 <strnlen>:
 8b6:	fc 01       	movw	r30, r24
 8b8:	61 50       	subi	r22, 0x01	; 1
 8ba:	70 40       	sbci	r23, 0x00	; 0
 8bc:	01 90       	ld	r0, Z+
 8be:	01 10       	cpse	r0, r1
 8c0:	d8 f7       	brcc	.-10     	; 0x8b8 <strnlen+0x2>
 8c2:	80 95       	com	r24
 8c4:	90 95       	com	r25
 8c6:	8e 0f       	add	r24, r30
 8c8:	9f 1f       	adc	r25, r31
 8ca:	08 95       	ret

000008cc <fputc>:
 8cc:	0f 93       	push	r16
 8ce:	1f 93       	push	r17
 8d0:	cf 93       	push	r28
 8d2:	df 93       	push	r29
 8d4:	18 2f       	mov	r17, r24
 8d6:	09 2f       	mov	r16, r25
 8d8:	eb 01       	movw	r28, r22
 8da:	8b 81       	ldd	r24, Y+3	; 0x03
 8dc:	81 fd       	sbrc	r24, 1
 8de:	03 c0       	rjmp	.+6      	; 0x8e6 <fputc+0x1a>
 8e0:	8f ef       	ldi	r24, 0xFF	; 255
 8e2:	9f ef       	ldi	r25, 0xFF	; 255
 8e4:	20 c0       	rjmp	.+64     	; 0x926 <fputc+0x5a>
 8e6:	82 ff       	sbrs	r24, 2
 8e8:	10 c0       	rjmp	.+32     	; 0x90a <fputc+0x3e>
 8ea:	4e 81       	ldd	r20, Y+6	; 0x06
 8ec:	5f 81       	ldd	r21, Y+7	; 0x07
 8ee:	2c 81       	ldd	r18, Y+4	; 0x04
 8f0:	3d 81       	ldd	r19, Y+5	; 0x05
 8f2:	42 17       	cp	r20, r18
 8f4:	53 07       	cpc	r21, r19
 8f6:	7c f4       	brge	.+30     	; 0x916 <fputc+0x4a>
 8f8:	e8 81       	ld	r30, Y
 8fa:	f9 81       	ldd	r31, Y+1	; 0x01
 8fc:	9f 01       	movw	r18, r30
 8fe:	2f 5f       	subi	r18, 0xFF	; 255
 900:	3f 4f       	sbci	r19, 0xFF	; 255
 902:	39 83       	std	Y+1, r19	; 0x01
 904:	28 83       	st	Y, r18
 906:	10 83       	st	Z, r17
 908:	06 c0       	rjmp	.+12     	; 0x916 <fputc+0x4a>
 90a:	e8 85       	ldd	r30, Y+8	; 0x08
 90c:	f9 85       	ldd	r31, Y+9	; 0x09
 90e:	81 2f       	mov	r24, r17
 910:	09 95       	icall
 912:	89 2b       	or	r24, r25
 914:	29 f7       	brne	.-54     	; 0x8e0 <fputc+0x14>
 916:	2e 81       	ldd	r18, Y+6	; 0x06
 918:	3f 81       	ldd	r19, Y+7	; 0x07
 91a:	2f 5f       	subi	r18, 0xFF	; 255
 91c:	3f 4f       	sbci	r19, 0xFF	; 255
 91e:	3f 83       	std	Y+7, r19	; 0x07
 920:	2e 83       	std	Y+6, r18	; 0x06
 922:	81 2f       	mov	r24, r17
 924:	90 2f       	mov	r25, r16
 926:	df 91       	pop	r29
 928:	cf 91       	pop	r28
 92a:	1f 91       	pop	r17
 92c:	0f 91       	pop	r16
 92e:	08 95       	ret

00000930 <__ultoa_invert>:
 930:	fa 01       	movw	r30, r20
 932:	aa 27       	eor	r26, r26
 934:	28 30       	cpi	r18, 0x08	; 8
 936:	51 f1       	breq	.+84     	; 0x98c <__ultoa_invert+0x5c>
 938:	20 31       	cpi	r18, 0x10	; 16
 93a:	81 f1       	breq	.+96     	; 0x99c <__ultoa_invert+0x6c>
 93c:	e8 94       	clt
 93e:	6f 93       	push	r22
 940:	6e 7f       	andi	r22, 0xFE	; 254
 942:	6e 5f       	subi	r22, 0xFE	; 254
 944:	7f 4f       	sbci	r23, 0xFF	; 255
 946:	8f 4f       	sbci	r24, 0xFF	; 255
 948:	9f 4f       	sbci	r25, 0xFF	; 255
 94a:	af 4f       	sbci	r26, 0xFF	; 255
 94c:	b1 e0       	ldi	r27, 0x01	; 1
 94e:	3e d0       	rcall	.+124    	; 0x9cc <__ultoa_invert+0x9c>
 950:	b4 e0       	ldi	r27, 0x04	; 4
 952:	3c d0       	rcall	.+120    	; 0x9cc <__ultoa_invert+0x9c>
 954:	67 0f       	add	r22, r23
 956:	78 1f       	adc	r23, r24
 958:	89 1f       	adc	r24, r25
 95a:	9a 1f       	adc	r25, r26
 95c:	a1 1d       	adc	r26, r1
 95e:	68 0f       	add	r22, r24
 960:	79 1f       	adc	r23, r25
 962:	8a 1f       	adc	r24, r26
 964:	91 1d       	adc	r25, r1
 966:	a1 1d       	adc	r26, r1
 968:	6a 0f       	add	r22, r26
 96a:	71 1d       	adc	r23, r1
 96c:	81 1d       	adc	r24, r1
 96e:	91 1d       	adc	r25, r1
 970:	a1 1d       	adc	r26, r1
 972:	20 d0       	rcall	.+64     	; 0x9b4 <__ultoa_invert+0x84>
 974:	09 f4       	brne	.+2      	; 0x978 <__ultoa_invert+0x48>
 976:	68 94       	set
 978:	3f 91       	pop	r19
 97a:	2a e0       	ldi	r18, 0x0A	; 10
 97c:	26 9f       	mul	r18, r22
 97e:	11 24       	eor	r1, r1
 980:	30 19       	sub	r19, r0
 982:	30 5d       	subi	r19, 0xD0	; 208
 984:	31 93       	st	Z+, r19
 986:	de f6       	brtc	.-74     	; 0x93e <__ultoa_invert+0xe>
 988:	cf 01       	movw	r24, r30
 98a:	08 95       	ret
 98c:	46 2f       	mov	r20, r22
 98e:	47 70       	andi	r20, 0x07	; 7
 990:	40 5d       	subi	r20, 0xD0	; 208
 992:	41 93       	st	Z+, r20
 994:	b3 e0       	ldi	r27, 0x03	; 3
 996:	0f d0       	rcall	.+30     	; 0x9b6 <__ultoa_invert+0x86>
 998:	c9 f7       	brne	.-14     	; 0x98c <__ultoa_invert+0x5c>
 99a:	f6 cf       	rjmp	.-20     	; 0x988 <__ultoa_invert+0x58>
 99c:	46 2f       	mov	r20, r22
 99e:	4f 70       	andi	r20, 0x0F	; 15
 9a0:	40 5d       	subi	r20, 0xD0	; 208
 9a2:	4a 33       	cpi	r20, 0x3A	; 58
 9a4:	18 f0       	brcs	.+6      	; 0x9ac <__ultoa_invert+0x7c>
 9a6:	49 5d       	subi	r20, 0xD9	; 217
 9a8:	31 fd       	sbrc	r19, 1
 9aa:	40 52       	subi	r20, 0x20	; 32
 9ac:	41 93       	st	Z+, r20
 9ae:	02 d0       	rcall	.+4      	; 0x9b4 <__ultoa_invert+0x84>
 9b0:	a9 f7       	brne	.-22     	; 0x99c <__ultoa_invert+0x6c>
 9b2:	ea cf       	rjmp	.-44     	; 0x988 <__ultoa_invert+0x58>
 9b4:	b4 e0       	ldi	r27, 0x04	; 4
 9b6:	a6 95       	lsr	r26
 9b8:	97 95       	ror	r25
 9ba:	87 95       	ror	r24
 9bc:	77 95       	ror	r23
 9be:	67 95       	ror	r22
 9c0:	ba 95       	dec	r27
 9c2:	c9 f7       	brne	.-14     	; 0x9b6 <__ultoa_invert+0x86>
 9c4:	00 97       	sbiw	r24, 0x00	; 0
 9c6:	61 05       	cpc	r22, r1
 9c8:	71 05       	cpc	r23, r1
 9ca:	08 95       	ret
 9cc:	9b 01       	movw	r18, r22
 9ce:	ac 01       	movw	r20, r24
 9d0:	0a 2e       	mov	r0, r26
 9d2:	06 94       	lsr	r0
 9d4:	57 95       	ror	r21
 9d6:	47 95       	ror	r20
 9d8:	37 95       	ror	r19
 9da:	27 95       	ror	r18
 9dc:	ba 95       	dec	r27
 9de:	c9 f7       	brne	.-14     	; 0x9d2 <__ultoa_invert+0xa2>
 9e0:	62 0f       	add	r22, r18
 9e2:	73 1f       	adc	r23, r19
 9e4:	84 1f       	adc	r24, r20
 9e6:	95 1f       	adc	r25, r21
 9e8:	a0 1d       	adc	r26, r0
 9ea:	08 95       	ret

000009ec <__prologue_saves__>:
 9ec:	2f 92       	push	r2
 9ee:	3f 92       	push	r3
 9f0:	4f 92       	push	r4
 9f2:	5f 92       	push	r5
 9f4:	6f 92       	push	r6
 9f6:	7f 92       	push	r7
 9f8:	8f 92       	push	r8
 9fa:	9f 92       	push	r9
 9fc:	af 92       	push	r10
 9fe:	bf 92       	push	r11
 a00:	cf 92       	push	r12
 a02:	df 92       	push	r13
 a04:	ef 92       	push	r14
 a06:	ff 92       	push	r15
 a08:	0f 93       	push	r16
 a0a:	1f 93       	push	r17
 a0c:	cf 93       	push	r28
 a0e:	df 93       	push	r29
 a10:	cd b7       	in	r28, 0x3d	; 61
 a12:	de b7       	in	r29, 0x3e	; 62
 a14:	ca 1b       	sub	r28, r26
 a16:	db 0b       	sbc	r29, r27
 a18:	0f b6       	in	r0, 0x3f	; 63
 a1a:	f8 94       	cli
 a1c:	de bf       	out	0x3e, r29	; 62
 a1e:	0f be       	out	0x3f, r0	; 63
 a20:	cd bf       	out	0x3d, r28	; 61
 a22:	09 94       	ijmp

00000a24 <__epilogue_restores__>:
 a24:	2a 88       	ldd	r2, Y+18	; 0x12
 a26:	39 88       	ldd	r3, Y+17	; 0x11
 a28:	48 88       	ldd	r4, Y+16	; 0x10
 a2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 a2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 a2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 a30:	8c 84       	ldd	r8, Y+12	; 0x0c
 a32:	9b 84       	ldd	r9, Y+11	; 0x0b
 a34:	aa 84       	ldd	r10, Y+10	; 0x0a
 a36:	b9 84       	ldd	r11, Y+9	; 0x09
 a38:	c8 84       	ldd	r12, Y+8	; 0x08
 a3a:	df 80       	ldd	r13, Y+7	; 0x07
 a3c:	ee 80       	ldd	r14, Y+6	; 0x06
 a3e:	fd 80       	ldd	r15, Y+5	; 0x05
 a40:	0c 81       	ldd	r16, Y+4	; 0x04
 a42:	1b 81       	ldd	r17, Y+3	; 0x03
 a44:	aa 81       	ldd	r26, Y+2	; 0x02
 a46:	b9 81       	ldd	r27, Y+1	; 0x01
 a48:	ce 0f       	add	r28, r30
 a4a:	d1 1d       	adc	r29, r1
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	f8 94       	cli
 a50:	de bf       	out	0x3e, r29	; 62
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	cd bf       	out	0x3d, r28	; 61
 a56:	ed 01       	movw	r28, r26
 a58:	08 95       	ret

00000a5a <_exit>:
 a5a:	f8 94       	cli

00000a5c <__stop_program>:
 a5c:	ff cf       	rjmp	.-2      	; 0xa5c <__stop_program>
